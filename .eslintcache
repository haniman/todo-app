[{"C:\\Users\\HANI\\todo-app\\src\\index.js":"1","C:\\Users\\HANI\\todo-app\\src\\components\\CreateTask.js":"2","C:\\Users\\HANI\\todo-app\\src\\components\\Header.js":"3","C:\\Users\\HANI\\todo-app\\src\\components\\TaskItem.js":"4","C:\\Users\\HANI\\todo-app\\src\\components\\TaskList.js":"5","C:\\Users\\HANI\\todo-app\\src\\components\\TaskContainer.js":"6","C:\\Users\\HANI\\todo-app\\src\\components\\TaskPie.js":"7","C:\\Users\\HANI\\todo-app\\src\\components\\TaskLatest.js":"8","C:\\Users\\HANI\\todo-app\\src\\components\\TaskCompleted.js":"9","C:\\Users\\HANI\\todo-app\\src\\App.js":"10","C:\\Users\\HANI\\todo-app\\src\\components\\EditTask.js":"11","C:\\Users\\HANI\\todo-app\\src\\components\\TaskSearch.js":"12"},{"size":733,"mtime":1606400708207,"results":"13","hashOfConfig":"14"},{"size":2287,"mtime":1606262789805,"results":"15","hashOfConfig":"14"},{"size":358,"mtime":1606262377102,"results":"16","hashOfConfig":"14"},{"size":2579,"mtime":1606317159357,"results":"17","hashOfConfig":"14"},{"size":736,"mtime":1606318252433,"results":"18","hashOfConfig":"14"},{"size":4855,"mtime":1606318435672,"results":"19","hashOfConfig":"14"},{"size":896,"mtime":1606269160363,"results":"20","hashOfConfig":"14"},{"size":859,"mtime":1606275644637,"results":"21","hashOfConfig":"14"},{"size":1031,"mtime":1606275706935,"results":"22","hashOfConfig":"14"},{"size":693,"mtime":1606143966374,"results":"23","hashOfConfig":"14"},{"size":1728,"mtime":1606267700363,"results":"24","hashOfConfig":"14"},{"size":1571,"mtime":1606319995294,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"h6lkir",{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"31"},"C:\\Users\\HANI\\todo-app\\src\\index.js",["57","58","59"],"C:\\Users\\HANI\\todo-app\\src\\components\\CreateTask.js",["60","61","62"],"import React, { Component, useState, useEffect } from \"react\"\r\n\r\n\r\nfunction CreateTask (props) {\r\n  \r\nconst [task, setTask] = useState();\r\n// Get the persisted tasks on first render only\r\nconst [tasks, setTasks] = useState(JSON.parse(localStorage.getItem(\"tasks\") || \"[]\"));\r\n\r\nconst [state, setState] = useState(\"\");\r\n  \r\n  const onChange = (e) => {\r\n    setState({title:e.target.value,});\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addTaskProps(state.title);\r\n    setState({title: \"\",});\r\n    //localStorage.setItem('tasks',JSON.stringify(tasks));\r\n  };\r\n\r\n  useEffect(() => {\r\n      const tasks = JSON.parse(localStorage.getItem('tasks'));\r\n      if (tasks) {\r\n        setTasks(tasks);\r\n      }\r\n    }, []);\r\n \r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  \r\n  return (\r\n    <div className=\"col-lg-2 col-md-2 col-sm-12 col-xs-12\">\r\n\r\n      <button type=\"button\" className=\"btn btn-primary float-right\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n        + New Task\r\n      </button>\r\n\r\n      <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Task</h5>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"modal-body\">\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Task Name\" value={state.title} name=\"title\" \r\n                  onChange={onChange} />  \r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <div class=\"w-100\">\r\n                  <input type=\"submit\" className=\"btn btn-primary w-100\" value=\"+ New Task\" />\r\n                  </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    )\r\n  \r\n}\r\nexport default CreateTask",["63","64"],"C:\\Users\\HANI\\todo-app\\src\\components\\Header.js",[],"C:\\Users\\HANI\\todo-app\\src\\components\\TaskItem.js",["65","66","67"],"import React , { useState, useEffect  } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n  function TaskItem(props) {\r\n\r\n    const completedStyle = {\r\n      fontStyle: \"italic\",\r\n      color: \"#666666\",\r\n      opacity: 0.4,\r\n      textDecoration: \"line-through\",\r\n    }\r\n\r\n    const { completed, id, title } = props.task;\r\n    const [tasks, setTasks] = useState(props.task);\r\n    const [newName, setNewName] = useState('');\r\n    const [isEditing, setEditing] = useState(false);\r\n\r\n    function handleNameChange(e) {\r\n      setNewName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n      e.preventDefault();\r\n      props.editTaskProps(id, newName);\r\n      setNewName(\"\");\r\n      setEditing(false);\r\n    }\r\n\r\n  //editing template\r\n  const editingTemplate = (\r\n    <form onSubmit={handleSubmit}>\r\n     <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <div className=\"form-group\">\r\n            <label className=\"todo-label\" htmlFor={id}>\r\n              Enter the new name for {title}\r\n            </label> &nbsp;\r\n            <input id={props.id} className=\"from-control\" type=\"text\" value={newName} onChange={handleNameChange} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <div className=\"btn-group\">\r\n            <button type=\"button\" className=\"btn btn-primary \">\r\n              Cancel \r\n            </button> &nbsp;\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Save \r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n//empty template\r\nconst viewTemplate = (\r\n  <div></div>\r\n );\r\n\r\nreturn (\r\n   <ul className =\"list-group list-group-flush\">\r\n      <li className=\"list-group-item\">\r\n        <div className=\"row\">\r\n          <div className=\"col-10\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={completed}\r\n              onChange={() => props.handleChangeProps(id)}\r\n            />\r\n            <span className=\"item-text\" style={completed ? completedStyle : null}>{title}</span>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <button type=\"button\" className=\"btn float-right\" onClick={() => props.deleteTaskProps(id)}><FontAwesomeIcon icon=\"trash\" /></button>\r\n            <button type=\"button\" className=\"btn float-right\" onClick={() => setEditing(true)}><FontAwesomeIcon icon=\"pencil-alt\" /></button>\r\n          </div>\r\n        </div>\r\n            {isEditing ? editingTemplate : viewTemplate}\r\n      </li>\r\n    </ul>\r\n)\r\n\r\n  \r\n}\r\n\r\nexport default TaskItem","C:\\Users\\HANI\\todo-app\\src\\components\\TaskList.js",[],"C:\\Users\\HANI\\todo-app\\src\\components\\TaskContainer.js",["68","69","70","71","72","73","74"],"C:\\Users\\HANI\\todo-app\\src\\components\\TaskPie.js",["75","76","77","78","79","80"],"import React, { useState, useEffect, ComponentProps } from 'react';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\n//belum siap\r\nfunction TaskPie (props) {\r\n\r\n  const [tasksCompleted, setTasksCompleted] = useState(0);\r\n  const [task, setTask] = useState(props.tasks);\r\n\r\n  const dataMock= [\r\n    { title: 'completed', value: 5, color: '#5285ec' },\r\n    { title: 'undone', value: 15, color: '#e8ecec' },\r\n  ];\r\n\r\n  return (\r\n\r\n    <div className=\"col-lg-4 col-xs-12 col-sm-12 pr-1 d-flex\">\r\n      <div className=\"card card-body flex-fill\">\r\n          <div className=\"card-body\">\r\n          <h5>Unfinished Test</h5>\r\n          <div data-tip=\"\" data-for=\"chart\">\r\n              <PieChart style={{ height: '100px' }}\r\n                data={dataMock}\r\n              />;\r\n            </div>\r\n           \r\n          </div>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default TaskPie;\r\n\r\n","C:\\Users\\HANI\\todo-app\\src\\components\\TaskLatest.js",[],"C:\\Users\\HANI\\todo-app\\src\\components\\TaskCompleted.js",["81","82","83"],"import React, { useState, useEffect } from \"react\";\r\n\r\nfunction TaskCompleted(props) {\r\n\r\n    const [tasksCompleted,setTasksCompleted] = useState(0);\r\n    const [task,setTask] = useState(props.tasks);\r\n    const [totalTask, setTotalTask] = useState(props.tasks.length)\r\n\r\n    useEffect(() => { \r\n        let tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n        setTask(tasks);\r\n        setTotalTask(tasks.length);\r\n        setTasksCompleted(tasks.filter(task => task.completed).length) \r\n    });\r\n\r\n    return (\r\n        <div className=\"col-lg-4 col-xs-12 col-sm-12 pr-1 d-flex\">\r\n          <div className=\"card card-body flex-fill\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Task Completed</h5>\r\n              <p className=\"card-text\">\r\n                <span className=\"taskdone\"> {tasksCompleted} </span><span className=\"tasktotal\"> / {props.tasks.length} </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default TaskCompleted",["84","85"],"C:\\Users\\HANI\\todo-app\\src\\App.js",[],"C:\\Users\\HANI\\todo-app\\src\\components\\EditTask.js",[],"C:\\Users\\HANI\\todo-app\\src\\components\\TaskSearch.js",["86","87","88","89"],"import React, {useState, useEffect} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nfunction TaskSearch() {\r\n\r\n  const [tasks,setTask] = useState(JSON.parse(localStorage.getItem(\"tasks\") || \"[]\"));\r\n  \r\n  useEffect(() => { \r\n      let tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n      //setTask(tasks);\r\n  });\r\n\r\nconst people = [];\r\n\r\nfor (let i = 0; i < tasks.length; i++){\r\n  people.push(String(tasks[i].title));\r\n} \r\n\r\n\r\n const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n const [searchResults, setSearchResults] = React.useState([]);\r\n const handleChange = event => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n React.useEffect(() => {\r\n    const results = people.filter(person =>\r\n      person.toLowerCase().includes(searchTerm)\r\n    );\r\n    setSearchResults(results);\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <div className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12\">\r\n          <div className=\"form-group has-search\">\r\n              <span className=\"form-control-feedback\"><FontAwesomeIcon icon=\"{['fas', 'fa-search']}\" /></span>\r\n               <input\r\n                type=\"text\"\r\n                placeholder=\"Search by task name\"\r\n                className=\"form-control w-75 float-right\"\r\n                value={searchTerm}\r\n                onChange={handleChange}\r\n               /> \r\n          </div>\r\n          <ul>\r\n           {searchResults.map(item => (\r\n             <li>{item}</li>\r\n            ))}\r\n          </ul>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default TaskSearch",{"ruleId":"90","severity":1,"message":"91","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":9},{"ruleId":"90","severity":1,"message":"94","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":14},{"ruleId":"90","severity":1,"message":"95","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":11},{"ruleId":"90","severity":1,"message":"96","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"97","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":12},{"ruleId":"90","severity":1,"message":"98","line":6,"column":14,"nodeType":"92","messageId":"93","endLine":6,"endColumn":21},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"90","severity":1,"message":"103","line":1,"column":28,"nodeType":"92","messageId":"93","endLine":1,"endColumn":37},{"ruleId":"90","severity":1,"message":"104","line":14,"column":12,"nodeType":"92","messageId":"93","endLine":14,"endColumn":17},{"ruleId":"90","severity":1,"message":"105","line":14,"column":19,"nodeType":"92","messageId":"93","endLine":14,"endColumn":27},{"ruleId":"90","severity":1,"message":"103","line":1,"column":18,"nodeType":"92","messageId":"93","endLine":1,"endColumn":27},{"ruleId":"90","severity":1,"message":"106","line":1,"column":29,"nodeType":"92","messageId":"93","endLine":1,"endColumn":37},{"ruleId":"90","severity":1,"message":"107","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":16},{"ruleId":"90","severity":1,"message":"108","line":11,"column":10,"nodeType":"92","messageId":"93","endLine":11,"endColumn":25},{"ruleId":"90","severity":1,"message":"104","line":47,"column":9,"nodeType":"92","messageId":"93","endLine":47,"endColumn":14},{"ruleId":"90","severity":1,"message":"109","line":65,"column":9,"nodeType":"92","messageId":"93","endLine":65,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":100,"column":21,"nodeType":"112","messageId":"113","endLine":100,"endColumn":22},{"ruleId":"90","severity":1,"message":"103","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"114","line":1,"column":38,"nodeType":"92","messageId":"93","endLine":1,"endColumn":52},{"ruleId":"90","severity":1,"message":"115","line":7,"column":10,"nodeType":"92","messageId":"93","endLine":7,"endColumn":24},{"ruleId":"90","severity":1,"message":"116","line":7,"column":26,"nodeType":"92","messageId":"93","endLine":7,"endColumn":43},{"ruleId":"90","severity":1,"message":"97","line":8,"column":10,"nodeType":"92","messageId":"93","endLine":8,"endColumn":14},{"ruleId":"90","severity":1,"message":"98","line":8,"column":16,"nodeType":"92","messageId":"93","endLine":8,"endColumn":23},{"ruleId":"90","severity":1,"message":"97","line":6,"column":12,"nodeType":"92","messageId":"93","endLine":6,"endColumn":16},{"ruleId":"90","severity":1,"message":"117","line":7,"column":12,"nodeType":"92","messageId":"93","endLine":7,"endColumn":21},{"ruleId":"118","severity":1,"message":"119","line":9,"column":5,"nodeType":"92","endLine":9,"endColumn":14,"suggestions":"120"},{"ruleId":"99","replacedBy":"121"},{"ruleId":"101","replacedBy":"122"},{"ruleId":"90","severity":1,"message":"123","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"98","line":7,"column":16,"nodeType":"92","messageId":"93","endLine":7,"endColumn":23},{"ruleId":"90","severity":1,"message":"104","line":10,"column":11,"nodeType":"92","messageId":"93","endLine":10,"endColumn":16},{"ruleId":"118","severity":1,"message":"124","line":31,"column":6,"nodeType":"125","endLine":31,"endColumn":18,"suggestions":"126"},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","'App' is defined but never used.","'Component' is defined but never used.","'task' is assigned a value but never used.","'setTask' is assigned a value but never used.","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'useEffect' is defined but never used.","'tasks' is assigned a value but never used.","'setTasks' is assigned a value but never used.","'useState' is defined but never used.","'EditTask' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'editedTaskList' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'ComponentProps' is defined but never used.","'tasksCompleted' is assigned a value but never used.","'setTasksCompleted' is assigned a value but never used.","'totalTask' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTask'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["129"],["127"],["128"],"'ReactDOM' is defined but never used.","React Hook React.useEffect has a missing dependency: 'people'. Either include it or remove the dependency array.","ArrayExpression",["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Add dependencies array: []",{"range":"135","text":"136"},"Update the dependencies array to be: [people, searchTerm]",{"range":"137","text":"138"},[500,500],", []",[869,881],"[people, searchTerm]"]