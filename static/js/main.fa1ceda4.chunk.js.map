{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/TaskItem.js","components/TaskList.js","components/Header.js","components/CreateTask.js","components/EditTask.js","components/TaskCompleted.js","components/TaskLatest.js","components/TaskPie.js","components/TaskSearch.js","components/TaskContainer.js","index.js"],"names":["library","add","faTrash","faPencilAlt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TaskItem","props","task","completed","id","title","useState","newName","setNewName","isEditing","setEditing","editingTemplate","onSubmit","e","preventDefault","editTaskProps","className","htmlFor","type","value","onChange","target","viewTemplate","checked","handleChangeProps","style","fontStyle","color","opacity","textDecoration","onClick","deleteTaskProps","icon","TasksList","this","tasks","map","selectTaskProps","React","Component","Header","class","CreateTask","JSON","parse","localStorage","getItem","setTasks","state","setState","useEffect","setItem","stringify","data-toggle","data-target","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","addTaskProps","placeholder","name","TaskCompleted","tasksCompleted","setTasksCompleted","setTask","length","setTotalTask","filter","TaskLatest","listItems","reverse","slice","TaskPie","data-tip","data-for","height","data","TaskSearch","people","i","push","String","searchTerm","setSearchTerm","searchResults","setSearchResults","results","person","toLowerCase","includes","event","item","TaskContainer","componentDidMount","handleChange","prevState","editTask","selectTask","countTask","counter","delTask","window","addTaskItem","newTask","uuidv4","prevProps","console","log","countTaskProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa1ceda4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash,faPencilAlt} from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faTrash,faPencilAlt)\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React , { useState, useEffect  } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n  function TaskItem(props) {\r\n\r\n    const completedStyle = {\r\n      fontStyle: \"italic\",\r\n      color: \"#666666\",\r\n      opacity: 0.4,\r\n      textDecoration: \"line-through\",\r\n    }\r\n\r\n    const { completed, id, title } = props.task;\r\n    const [tasks, setTasks] = useState(props.task);\r\n    const [newName, setNewName] = useState('');\r\n    const [isEditing, setEditing] = useState(false);\r\n\r\n    function handleNameChange(e) {\r\n      setNewName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n      e.preventDefault();\r\n      props.editTaskProps(id, newName);\r\n      setNewName(\"\");\r\n      setEditing(false);\r\n    }\r\n\r\n  //editing template\r\n  const editingTemplate = (\r\n    <form onSubmit={handleSubmit}>\r\n     <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <div className=\"form-group\">\r\n            <label className=\"todo-label\" htmlFor={id}>\r\n              Enter the new name for {title}\r\n            </label> &nbsp;\r\n            <input id={props.id} className=\"from-control\" type=\"text\" value={newName} onChange={handleNameChange} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <div className=\"btn-group\">\r\n            <button type=\"button\" className=\"btn btn-primary \">\r\n              Cancel \r\n            </button> &nbsp;\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Save \r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n//empty template\r\nconst viewTemplate = (\r\n  <div></div>\r\n );\r\n\r\nreturn (\r\n   <ul className =\"list-group list-group-flush\">\r\n      <li className=\"list-group-item\">\r\n        <div className=\"row\">\r\n          <div className=\"col-10\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={completed}\r\n              onChange={() => props.handleChangeProps(id)}\r\n            />\r\n            <span className=\"item-text\" style={completed ? completedStyle : null}>{title}</span>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <button type=\"button\" className=\"btn float-right\" onClick={() => props.deleteTaskProps(id)}><FontAwesomeIcon icon=\"trash\" /></button>\r\n            <button type=\"button\" className=\"btn float-right\" onClick={() => setEditing(true)}><FontAwesomeIcon icon=\"pencil-alt\" /></button>\r\n          </div>\r\n        </div>\r\n            {isEditing ? editingTemplate : viewTemplate}\r\n      </li>\r\n    </ul>\r\n)\r\n\r\n  \r\n}\r\n\r\nexport default TaskItem","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nclass TasksList extends React.Component {\r\n\r\n  render() {  \r\n    return (\r\n      <div className=\"col\">\r\n        <div className=\"card\">\r\n          {this.props.tasks.map(task => (\r\n            <TaskItem \r\n               key={task.id} \r\n               task={task} \r\n               handleChangeProps={this.props.handleChangeProps} //this was passed from Parent component through props\r\n               deleteTaskProps={this.props.deleteTaskProps}\r\n               selectTaskProps={this.props.selectTaskProps}\r\n               editTaskProps={this.props.editTaskProps}\r\n              />\r\n          ))}     \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TasksList","import React from \"react\";\r\n\r\n//this is the same as function Header() {}\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n\t    <div className=\"container row-header\">\r\n\t\t\t<div className=\"avatar\"></div> \r\n\t\t    <div className=\"yourname\">Hani</div>  \r\n\t    </div>\r\n\t    <div class=\"clear\"></div>\r\n  \t</header>\r\n  )\r\n}\r\nexport default Header","import React, { Component, useState, useEffect } from \"react\"\r\n\r\n\r\nfunction CreateTask (props) {\r\n  \r\nconst [task, setTask] = useState();\r\n// Get the persisted tasks on first render only\r\nconst [tasks, setTasks] = useState(JSON.parse(localStorage.getItem(\"tasks\") || \"[]\"));\r\n\r\nconst [state, setState] = useState(\"\");\r\n  \r\n  const onChange = (e) => {\r\n    setState({title:e.target.value,});\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addTaskProps(state.title);\r\n    setState({title: \"\",});\r\n    //localStorage.setItem('tasks',JSON.stringify(tasks));\r\n  };\r\n\r\n  useEffect(() => {\r\n      const tasks = JSON.parse(localStorage.getItem('tasks'));\r\n      if (tasks) {\r\n        setTasks(tasks);\r\n      }\r\n    }, []);\r\n \r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  \r\n  return (\r\n    <div className=\"col-lg-2 col-md-2 col-sm-12 col-xs-12\">\r\n\r\n      <button type=\"button\" className=\"btn btn-primary float-right\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n        + New Task\r\n      </button>\r\n\r\n      <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Task</h5>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"modal-body\">\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Task Name\" value={state.title} name=\"title\" \r\n                  onChange={onChange} />  \r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <div class=\"w-100\">\r\n                  <input type=\"submit\" className=\"btn btn-primary w-100\" value=\"+ New Task\" />\r\n                  </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    )\r\n  \r\n}\r\nexport default CreateTask","import React, { Component } from \"react\"\r\n//different methods of using a class component. Alternative to using React.Component\r\n\r\nclass EditTask extends Component {\r\n  state = {\r\n    title: \"\",\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      //title: e.target.value\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.editTaskProps(this.state.title);\r\n    this.setState({\r\n      title: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n\r\n      <div className=\"modal fade\" id=\"editableModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">New Task</h5>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"modal-body\">\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Task Name\" value={this.state.title} name=\"title\" onChange={this.onChange} />  \r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <div class=\"w-100\">\r\n                  <input type=\"submit\" className=\"btn btn-primary w-100\" value=\"+ Edit Task\" />\r\n                  </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default EditTask","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction TaskCompleted(props) {\r\n\r\n    const [tasksCompleted,setTasksCompleted] = useState(0);\r\n    const [task,setTask] = useState(props.tasks);\r\n    const [totalTask, setTotalTask] = useState(props.tasks.length)\r\n\r\n    useEffect(() => { \r\n        let tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n        setTask(tasks);\r\n        setTotalTask(tasks.length);\r\n        setTasksCompleted(tasks.filter(task => task.completed).length) \r\n    });\r\n\r\n    return (\r\n        <div className=\"col-lg-4 col-xs-12 col-sm-12 pr-1 d-flex\">\r\n          <div className=\"card card-body flex-fill\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Task Completed</h5>\r\n              <p className=\"card-text\">\r\n                <span className=\"taskdone\"> {tasksCompleted} </span><span className=\"tasktotal\"> / {props.tasks.length} </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default TaskCompleted","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction TaskLatest(props) {\r\n\r\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem(\"tasks\") || \"[]\"));\r\n  useEffect(() => {\r\n      let tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n      if (tasks) {\r\n        setTasks(tasks);\r\n      }\r\n    \r\n    }, []);\r\n  \r\n    let a = tasks.reverse();   \r\n    let b = a.slice(0,3);\r\n    const listItems = b.map((task) => <li>{task.title}</li>);\r\n\r\n    return (\r\n        <div className=\"col-lg-4 col-xs-12 col-sm-12 pr-1 d-flex\">\r\n          <div className=\"card card-body flex-fill\">\r\n\t\t      <div className=\"card-body \">\r\n\t\t        <h5 className=\"card-title\">Latest Created Task</h5>\r\n\t\t        <ul>\r\n                {listItems}     \r\n            </ul>\r\n\t\t      </div>\r\n\t      </div>\r\n        </div>\r\n\r\n    )\r\n  \r\n}\r\n\r\nexport default TaskLatest","import React, { useState, useEffect, ComponentProps } from 'react';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\n//belum siap\r\nfunction TaskPie (props) {\r\n\r\n  const [tasksCompleted, setTasksCompleted] = useState(0);\r\n  const [task, setTask] = useState(props.tasks);\r\n\r\n  const dataMock= [\r\n    { title: 'completed', value: 5, color: '#5285ec' },\r\n    { title: 'undone', value: 15, color: '#e8ecec' },\r\n  ];\r\n\r\n  return (\r\n\r\n    <div className=\"col-lg-4 col-xs-12 col-sm-12 pr-1 d-flex\">\r\n      <div className=\"card card-body flex-fill\">\r\n          <div className=\"card-body\">\r\n          <h5>Unfinished Test</h5>\r\n          <div data-tip=\"\" data-for=\"chart\">\r\n              <PieChart style={{ height: '100px' }}\r\n                data={dataMock}\r\n              />;\r\n            </div>\r\n           \r\n          </div>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default TaskPie;\r\n\r\n","import React, {useState, useEffect} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nfunction TaskSearch() {\r\n\r\n  const [tasks,setTask] = useState(JSON.parse(localStorage.getItem(\"tasks\") || \"[]\"));\r\n  \r\n  useEffect(() => { \r\n      let tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n      //setTask(tasks);\r\n  });\r\n\r\nconst people = [];\r\n\r\nfor (let i = 0; i < tasks.length; i++){\r\n  people.push(String(tasks[i].title));\r\n} \r\n\r\n\r\n const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n const [searchResults, setSearchResults] = React.useState([]);\r\n const handleChange = event => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n React.useEffect(() => {\r\n    const results = people.filter(person =>\r\n      person.toLowerCase().includes(searchTerm)\r\n    );\r\n    setSearchResults(results);\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <div className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12\">\r\n          <div className=\"form-group has-search\">\r\n              <span className=\"form-control-feedback\"><FontAwesomeIcon icon=\"{['fas', 'fa-search']}\" /></span>\r\n               <input\r\n                type=\"text\"\r\n                placeholder=\"Search by task name\"\r\n                className=\"form-control w-75 float-right\"\r\n                value={searchTerm}\r\n                onChange={handleChange}\r\n               /> \r\n          </div>\r\n          <ul>\r\n           {searchResults.map(item => (\r\n             <li>{item}</li>\r\n            ))}\r\n          </ul>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default TaskSearch","import React , { useEffect, useState }  from \"react\"; //to make syre jsx works\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport TasksList from \"./TaskList\";\r\nimport Header from \"./Header\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport EditTask from \"./EditTask\";\r\nimport TaskCompleted from \"./TaskCompleted\";\r\nimport TaskLatest from \"./TaskLatest\";\r\nimport TaskPie from \"./TaskPie\"; \r\nimport TaskSearch from \"./TaskSearch\"; \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass TaskContainer extends React.Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [\r\n         {\r\n           id: uuidv4(),\r\n           title: \"Clean the room\",\r\n           completed: false\r\n         },\r\n         {\r\n           id: uuidv4(),\r\n           title: \"Buy some vegetables,chicken & chips\",\r\n           completed: false\r\n         },\r\n         {\r\n           id: uuidv4(),\r\n           title: \"Reinstall windows on PC\",\r\n           completed: true\r\n         },\r\n        {\r\n           id: uuidv4(),\r\n           title: \"Start to work on new feature\",\r\n           completed: false\r\n         }\r\n        ]\r\n    };   \r\n}\r\n\r\n // on load get the task list\r\n  componentDidMount = () => {\r\n    // get the task list from the local storage\r\n    let tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n  };\r\n\r\n//method to handle checkbox change\r\nhandleChange = (id) => {\r\n  this.setState(prevState => ({ //prevState is an updater method. to ensure we get the latest data/state\r\n    tasks: prevState.tasks.map((task) => {\r\n      if (task.id === id) {\r\n        task.completed = !task.completed;\r\n      }\r\n      return task;\r\n      }),\r\n\r\n    }));\r\n};\r\n\r\n//method to edit item from list\r\neditTask = (id,newName) => {\r\n  const editedTaskList = \r\n  this.setState(prevState => ({ //prevState is an updater method. to ensure we get the latest data/state\r\n    tasks: prevState.tasks.map((task) => {\r\n      if (task.id === id) {\r\n        return {...task, title: newName}\r\n      }\r\n      return task;\r\n      }),\r\n\r\n  }));\r\n\r\n};\r\n\r\n//method to remove item from sopink list\r\nselectTask = id => {\r\n this.setState(prevState => ({ //prevState is an updater method. to ensure we get the latest data/state\r\n    tasks: prevState.tasks.map((task) => {\r\n      if (task.id === id) {\r\n        task.completed = !task.completed;\r\n      }\r\n      return task;\r\n      }),\r\n  }));\r\n};\r\n\r\n//method to count completed task\r\ncountTask = () => {\r\n this.setState(prevState => ({ //prevState is an updater method. to ensure we get the latest data/state\r\n    tasks: prevState.tasks.map((tasks) => {\r\n        let counter = 0;\r\n        for (let i = 0; i < tasks.length; i++) {\r\n          if (tasks[i].completed === true) {\r\n            counter++;\r\n          }\r\n        }\r\n      return counter,tasks.length;\r\n      }),\r\n  }));\r\n};\r\n\r\n//method to remove item from task list\r\ndelTask = id => {\r\n  //console.log(\"deleted\", id);\r\n  //spread operator (…) allows us to grab the current tasks item(s) at every point\r\n  this.setState({\r\n    tasks: [\r\n      ...this.state.tasks.filter(task => { //filter is used to remove deleieted item\r\n        return task.id !== id;\r\n      })\r\n    ]\r\n  });\r\n  window.localStorage.setItem('tasks', JSON.stringify(this.state.tasks));\r\n};\r\n\r\n//method to add item\r\naddTaskItem = (title) => {\r\n  const newTask = {\r\n    id: uuidv4(),\r\n    title: title,\r\n    completed: false\r\n  };\r\n  this.setState({\r\n    tasks: [...this.state.tasks, newTask],  \r\n  });\r\n  localStorage.setItem('tasks', JSON.stringify(this.state.tasks));\r\n};\r\n\r\n\r\ncomponentDidUpdate(prevProps, prevState) {\r\n  if (prevProps !== this.props) {\r\n    console.log(\"props change\");\r\n  }\r\n}\r\n\r\n  //use (this.) because it is part of the class\r\n  //passing handle method to TaskList component\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"container\">\r\n            <div className=\"row row-top\">\r\n                <TaskCompleted \r\n                  tasks={this.state.tasks}\r\n                  countTaskProps={this.countTask}\r\n                />\r\n                <TaskLatest tasks={this.state.tasks} />\r\n                <TaskPie />\r\n            </div>\r\n\r\n          <div className=\"row row-search\"> \r\n            <div className=\"ccol-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n              <h5>Tasks</h5>\r\n            </div> \r\n            \r\n            <TaskSearch />\r\n            <CreateTask addTaskProps={this.addTaskItem} />\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <TasksList \r\n              tasks={this.state.tasks} \r\n              handleChangeProps={this.handleChange} \r\n              deleteTaskProps={this.delTask}\r\n              editTaskProps={this.editTask}\r\n              selectTaskProps={this.selectTask}\r\n            /> \r\n          </div>\r\n        </div>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n}\r\nexport default TaskContainer","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport TaskContainer from './components/TaskContainer';\nimport \"./App.css\"\n\n//component file\n//why my app os not updated?\n\nReactDOM.render(<TaskContainer />, document.getElementById(\"root\"))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}